import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the minimumSwaps function below.
    static int minimumSwaps(int[] arr) {
        int minswaps=0;
        int n=arr.length;
int[] p_new =new int[n];
       for(int j=0;j<n;j++)
        {
           p_new[j]=arr[j];
           //System.out.println(p_new[j]);
        }
       Arrays.sort(p_new);
       for(int j=0;j<n;j++)
       {  
           int find=p_new[j];
           for(int k=0;k<n;k++)
           {
               if((find==arr[k])&&(j!=k))
               {
                   int temp=arr[j];
                   arr[j]=find;
                   arr[k]=temp;
                   minswaps++;
                   break;
               }
           }
           
       }
       return minswaps;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int res = minimumSwaps(arr);

        bufferedWriter.write(String.valueOf(res));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
